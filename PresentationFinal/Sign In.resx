<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>